#!/bin/bash
set -eo pipefail

install-openssl() {
  local version="$1"
  local prefix="$2"
  [[ -d "$prefix" ]] && return

  local filename="openssl-${version}.tar.gz"
  local url="https://www.openssl.org/source/${filename}"

  cd /usr/local/src
  wget -O "$filename" "$url"
  tar -xzvf "$filename"

  cd "openssl-${version}"
  ./config shared
  make install INSTALL_PREFIX="$prefix"
}

install-ruby-install() {
  local version="$1"
  local filename="ruby-install-${version}.tar.gz" 
  local url="https://github.com/postmodern/ruby-install/archive/v${version}.tar.gz"

  cd /usr/local/src
  [[ -f "$filename" ]] && return

  wget -O "$filename" "$url"
  tar -xzvf "$filename"

  cd "ruby-install-${version}"
  make install

  mkdir -p /opt/rubies
}

install-chruby() {
  local version="$1"
  local filename="chruby-${version}.tar.gz"
  local url="https://github.com/postmodern/chruby/archive/v${version}.tar.gz"

  cd /usr/local/src
  [[ -f "$filename" ]] && return

  wget -O "$filename" "$url"
  tar -xzvf "$filename"

  cd "chruby-${version}"
  make install

  local bash_profile=/home/vagrant/.bash_aliases
  echo 'source /usr/local/share/chruby/chruby.sh' >> "$bash_profile"
}

download-rubygems() {
  local version="$1"
  local filename="rubygems-${version}.tgz"
  local url="https://rubygems.org/rubygems/rubygems-${version}.tgz"

  cd /usr/local/src
  [[ -d "rubygems-${version}" ]] && return

  wget -O "$filename" "$url"
  tar -xzvf "$filename"
}

install-ruby() {
  local version="$1"
  local pathname="/opt/rubies/ruby-${version}"
  [[ -d "$pathname" ]] && return

  case $# in
    1)
      ruby-install -r /opt/rubies ruby "$version"
      ;;
    3)
      local openssl_dir="$2"
      local rubygems_dir="$3"
      ruby-install -r /opt/rubies ruby "$version" -- --with-openssl-dir="$openssl_dir"
      cd "$rubygems_dir"
      "${pathname}/bin/ruby" setup.rb
      ;;
  esac
}

install-jruby() {
  local version="$1"
  local bundler_version="$2"

  local pathname="/opt/rubies/jruby-${version}"
  [[ -d "$pathname" ]] && return

  ruby-install -r /opt/rubies jruby "$version"
  "${pathname}/bin/ruby" -S gem install bundler -v "$bundler_version"
}

apt-get update
apt-get install -y build-essential
mkdir -p /usr/local/src

install-ruby-install 0.8.1
install-chruby 0.3.9
install-openssl '1.0.2u' /usr/local/src/openssl@1.0
download-rubygems 2.7.11

RUBY_VERSIONS=(
  3.0.0
  2.7.2
  2.6.6
  2.5.8
  2.4.10
)

for version in "${RUBY_VERSIONS[@]}" ; do
  install-ruby "$version"

  if [[ "$version" < '2.6' ]] ; then
    "/opt/rubies/ruby-${version}/bin/gem" install bundler -v '< 2'
  fi
done

RUBY_VERSIONS=(
  2.3.8
  2.2.10
  2.1.10
  2.0.0-p648
  1.9.3-p551
)

for version in "${RUBY_VERSIONS[@]}" ; do
  install-ruby "$version" \
      /usr/local/src/openssl@1.0/usr/local/ssl \
      /usr/local/src/rubygems-2.7.11
done

install-jruby 1.7.27 '< 2'
install-jruby 9.2.14.0 '>= 2'
